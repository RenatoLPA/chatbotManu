// Fun√ß√£o para formatar a hora
function formatarHora(data) {
    const horas = String(data.getHours()).padStart(2, '0');
    const minutos = String(data.getMinutes()).padStart(2, '0');
    return `${horas}:${minutos}`;
}

//  VERS√ÉO ANTERIOR - Fun√ß√£o para alternar a exibi√ß√£o do chat
// function toggleChat() {
//     const chatContainer = document.getElementById('chatContainer');
//     const toggleButton = document.getElementById('toggleButton');

//      Verifica se o chat est√° vis√≠vel e alterna sua exibi√ß√£o
//     if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
//         chatContainer.style.display = 'block';  Exibe o chat
//         toggleButton.innerHTML = '<i class="fas fa-times"></i>';  Muda para o √≠cone de fechar
//     } else {
//         chatContainer.style.display = 'none';  Oculta o chat
//         toggleButton.innerHTML = '<i class="fas fa-comments"></i>';  Muda para o √≠cone de abrir
//     }
// }

// Fun√ß√£o para alternar a exibi√ß√£o do chat
function toggleChat() {
    const chatContainer = document.getElementById('chatContainer');
    const toggleButton = document.getElementById('toggleButton');
    const chatTitle = document.getElementById('chat-title'); // Seleciona o t√≠tulo do chat

    // Verifica se o chat est√° vis√≠vel e alterna sua exibi√ß√£o
    if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
        chatContainer.style.display = 'block'; // Exibe o chat
        toggleButton.innerHTML = '<i class="fas fa-times" style="font-size: 24px;"></i>'; // Muda para o √≠cone de fechar
        chatTitle.innerHTML = '<img src="./AvatarManu.PNG" alt="Chat Bot" style="width: 40px; height: 40px; border-radius: 50%;">'; // Altera o t√≠tulo para a imagem
    } else {
        chatContainer.style.display = 'none'; // Oculta o chat
        toggleButton.innerHTML = '<img src="./AvatarManu.PNG" alt="Abrir Chat" style="width: 40px; height: 40px; border-radius: 50%;">'; // Muda para a imagem de abrir
        chatTitle.innerHTML = 'Chat Bot'; // Restaura o t√≠tulo original
    }
}

// Fun√ß√£o para alternar entre tela cheia e modo normal
function toggleFullscreen() {
    const chatContainer = document.getElementById('chatContainer');

    if (!document.fullscreenElement) {
        chatContainer.requestFullscreen().catch(err => {
            console.log(`Erro ao tentar entrar em tela cheia: ${err.message} (${err.name})`);
        });
    } else {
        document.exitFullscreen();
    }
}

// Fun√ß√£o para ajustar o scroll do chat
function adjustScroll() {
    const chatBody = document.getElementById('chatBody');
    chatBody.scrollTop = chatBody.scrollHeight; // Rola para o fundo
}

// Adiciona um evento para enviar a mensagem ao pressionar ENTER
document.getElementById('inputMessage').addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
        e.preventDefault();
        sendMessage();
    }
});

// Fun√ß√£o para enviar a mensagem
function sendMessage() {
    const inputMessage = document.getElementById('inputMessage');
    const chatBody = document.getElementById('chatBody');
    

    // Verifica se a mensagem n√£o est√° vazia
    if (inputMessage.value.trim() === '') {
        // Mensagem de resposta autom√°tica para entrada vazia
        const dataAtual = new Date();
        const horaAtual = formatarHora(dataAtual);
        
        const autoResponseContainer = document.createElement('div');
        autoResponseContainer.className = 'bot-message'; // Adiciona a classe para mensagens do bot
        const autoResponseMessage = document.createElement('p');
        autoResponseMessage.textContent = "Opa! Acredito que voc√™ pressinou enter sem ter escrito alguma mensagem. ;)"; // Mensagem de aviso

        const autoResponseTimeStamp = document.createElement('span');
        autoResponseTimeStamp.textContent = `${horaAtual}`;
        autoResponseTimeStamp.style.fontSize = '0.8em';
        autoResponseTimeStamp.style.display = 'block';
        autoResponseTimeStamp.style.marginTop = '2px';

        autoResponseContainer.appendChild(autoResponseMessage);
        autoResponseContainer.appendChild(autoResponseTimeStamp);
        chatBody.appendChild(autoResponseContainer);

        // Ajusta o scroll para a √∫ltima mensagem
        adjustScroll();
        return; // Sai da fun√ß√£o se a mensagem estiver vazia
    }

    const dataAtual = new Date();
    const horaAtual = formatarHora(dataAtual);

    // Mensagem do usu√°rio
    const messageContainer = document.createElement('div');
    messageContainer.className = 'user-message'; // Adiciona a classe para mensagens do usu√°rio
    const newMessage = document.createElement('p');
    newMessage.textContent = inputMessage.value;

    const timeStamp = document.createElement('span');
    timeStamp.textContent = `${horaAtual}`;
    timeStamp.style.fontSize = '0.8em';
    timeStamp.style.display = 'block';
    timeStamp.style.marginTop = '2px';

    messageContainer.appendChild(newMessage);
    messageContainer.appendChild(timeStamp);
    chatBody.appendChild(messageContainer);

    // Limpa o campo de entrada
    inputMessage.value = '';
    inputMessage.style.height = 'auto'; // Reseta a altura do campo de entrada

    // Ajusta o scroll para a √∫ltima mensagem
    adjustScroll();

    // Anima√ß√£o de digita√ß√£o
    const typingIndicator = document.createElement('div');
    typingIndicator.className = 'typing-indicator';
    typingIndicator.innerHTML = '<span>.</span><span>.</span><span>.</span>';
    chatBody.appendChild(typingIndicator);
    adjustScroll();

        // Resposta autom√°tica ap√≥s a anima√ß√£o
        setTimeout(() => {
            // Remove o indicador de digita√ß√£o
            chatBody.removeChild(typingIndicator);

            // Verifica se a mensagem do usu√°rio √© uma pergunta predeterminada
        const userMessage = newMessage.textContent.toLowerCase(); // Usa o texto da mensagem do usu√°rio
        const responses = {
           'oi': 'Oi! Sou a Manu e estou ansiosa e adorarei lhe ajudar! Por enquanto n√£o posso falar muito. Mas sobre o que voc√™ gostaria de perguntar?',
           'como voc√™ est√°': 'Estou bem, obrigada! E voc√™?',
           'como voc√™ est√°?': 'Estou bem, obrigada! E voc√™?',
           'bem': 'Que √≥timo! Sobre o que quer falar?',
           'bem, tamb√©m!': 'Que √≥timo! Sobre o que quer falar?',
           'estou bem': 'Que √≥timo! Sobre o que quer falar?',           
           'o que voc√™ faz': 'Sou um chatbot, e  estou em desenvolvimento para lhe atender melhor e falar sobre v√°rios t√≥picos. Prinicplamente sobre dashboards, consumo do chat bot por usu√°rio e o sistema Target!',
           'o que voc√™ faz?': 'Sou um chatbot, e  estou em desenvolvimento para lhe atender melhor e falar sobre v√°rios t√≥picos. Prinicplamente sobre dashboards, consumo do chat bot por usu√°rio e o sistema Target!',
           'qual √© o seu nome': 'Eu sou Manu, seu assistente virtual!',
           'qual √© o seu nome?': 'Eu sou Manu, seu assistente virtual!',
           'o que voc√™ pode me ajudar?': 'Posso ajudar com informa√ß√µes sobre diversos t√≥picos, como tecnologia, sa√∫de, entretenimento e muito mais.',
           'me fale sobre tecnologia': 'Claro! Tecnologia √© um campo em constante evolu√ß√£o que abrange tudo, desde computadores e smartphones at√© intelig√™ncia artificial e biotecnologia.',
           'me fale sobre sa√∫de': 'Sa√∫de √© fundamental! √â importante ter uma alimenta√ß√£o equilibrada, praticar exerc√≠cios e cuidar da sa√∫de mental. Voc√™ tem alguma pergunta espec√≠fica sobre sa√∫de?',
           'me fale sobre entretenimento': 'Entretenimento pode incluir filmes, m√∫sica, jogos e muito mais. Tem algum tipo espec√≠fico que voc√™ gostaria de discutir?',
           'quais s√£o suas habilidades?': 'Posso responder perguntas, fornecer informa√ß√µes, ajudar com recomenda√ß√µes e muito mais. O que voc√™ gostaria de saber?',
           'conta uma piada': 'Claro! Por que o computador foi ao m√©dico?',
           'n√£o sei': 'Porque ele tinha um v√≠rus! üòÑ',
           'kkk': 'üòÑüòÑüòÑüòÑüòÑüòÑüòÑüòÑüòÑ',
           'kkkk': 'üòÑüòÑüòÑüòÑüòÑüòÑüòÑüòÑüòÑ',
           'kkkkk': 'üòÑüòÑüòÑüòÑüòÑüòÑüòÑüòÑüòÑ',
           'conta uma piada?': 'Claro! Por que o computador foi ao m√©dico? Porque ele tinha um v√≠rus! üòÑ',
           'tchau': 'Tchau! Foi √≥timo ter falado com voc√™, logo em breve falaremos de assuntos mais amplos!',
           'obrigado': 'De nada! Estou aqui para ajudar. Se tiver mais perguntas, √© s√≥ perguntar!',
           'obrigada': 'De nada! Estou aqui para ajudar. Se tiver mais perguntas, √© s√≥ perguntar!',
           'relat√≥rio': 'Aqui est√° o relat√≥rio que voc√™ pediu'

            
        };

        const autoResponseContainer = document.createElement('div');
    autoResponseContainer.className = 'bot-message'; // Adiciona a classe para mensagens do bot
    const autoResponseMessage = document.createElement('p');

    if (userMessage === 'relat√≥rio') {
        // Exibe a imagem do gr√°fico
        const graficoImagem = document.createElement('img');
        graficoImagem.src = './grafico.gif'; // Caminho para o gr√°fico
        graficoImagem.alt = 'Gr√°fico do Relat√≥rio';
        graficoImagem.style.width = '100%';
        autoResponseContainer.appendChild(graficoImagem);

        // Mensagem de confirma√ß√£o e bot√£o de exporta√ß√£o
        const confirmacaoMensagem = document.createElement('p');
        confirmacaoMensagem.textContent = 'Deseja salvar o relat√≥rio?';
        autoResponseContainer.appendChild(confirmacaoMensagem);

        // Bot√£o de exporta√ß√£o
        const exportarBotao = document.createElement('button');
        exportarBotao.textContent = 'Exportar';
        exportarBotao.style.marginTop = '10px';
        exportarBotao.addEventListener('click', () => {
            const link = document.createElement('a');
            link.href = './grafico.gif'; // Caminho para o gr√°fico
            link.download = 'grafico.gif';
            link.click();
        });
        autoResponseContainer.appendChild(exportarBotao);
    } else if (responses[userMessage]) {
        // Caso padr√£o para mensagens predefinidas
        const autoResponseMessage = document.createElement('p');
        autoResponseMessage.textContent = responses[userMessage];
        autoResponseContainer.appendChild(autoResponseMessage);
    } else {
        // Resposta gen√©rica para entradas desconhecidas
        const autoResponseMessage = document.createElement('p');
        autoResponseMessage.textContent = 'Eita! No momento ainda estou aprendendo e talvez n√£o consiga falar sobre tudo com voc√™. Posso ajud√°-lo com algo mais?';
        autoResponseContainer.appendChild(autoResponseMessage);
    }

    const autoResponseTimeStamp = document.createElement('span');
    autoResponseTimeStamp.textContent = `${horaAtual}`;
    autoResponseTimeStamp.style.fontSize = '0.8em';
    autoResponseTimeStamp.style.display = 'block';
    autoResponseTimeStamp.style.marginTop = '2px';

    autoResponseContainer.appendChild(autoResponseTimeStamp);
    chatBody.appendChild(autoResponseContainer);

    // Ajusta o scroll para a √∫ltima mensagem
    adjustScroll();
}, 2000); // Tempo da anima√ß√£o de digita√ß√£o (2 segundos)
}
